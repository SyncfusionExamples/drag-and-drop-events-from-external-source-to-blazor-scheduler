@page "/"

@using Syncfusion.Blazor.Schedule

<div>
    <div class='scheduler-title-container'>Doctor's Appointments</div>
    <div class='scheduler-component'>
        <SfSchedule TValue="AppointmentDataModel" @bind-SelectedDate="@CurrentDate"
                    Height="500px" Width="100%" @ref="ScheduleReference">
            <ScheduleEventSettings DataSource="@ScheduleData">
            </ScheduleEventSettings>
        </SfSchedule>
    </div>
    <div class='treeview-title-container'>Waiting List</div>
    <div class='treeview-component'>
       <SfTreeView TValue="TreeViewModel" AllowDragAndDrop="true">
           <TreeViewEvents TValue="TreeViewModel"
                           OnNodeDragStop="OnTreeViewDragStop">
           </TreeViewEvents>
           <TreeViewFieldsSettings Text="Name" Id="Id"
                DataSource="@TreeViewData">
           </TreeViewFieldsSettings>
       </SfTreeView> 
    </div>
</div>

@code {

    SfSchedule<AppointmentDataModel> ScheduleReference;

    public async void OnTreeViewDragStop(DragAndDropEventArgs args)
    {
        args.Cancel = true;

        CellClickEventArgs CellData = await ScheduleReference.GetTargetCellAsync((int)args.Left, (int)args.Top);

        TreeViewModel TreeData = TreeViewData.Where(data => data.Id.ToString() == args.DraggedNodeData.Id).First();

        if (CellData != null)
        {
            Random rnd = new Random();
            AppointmentDataModel EventData = new AppointmentDataModel
            {
                Id = rnd.Next(1000),
                Subject = TreeData.Name,
                StartTime = CellData.StartTime,
                EndTime = CellData.EndTime,
                IsAllDay = CellData.IsAllDay
            };

            // await ScheduleReference.AddEvent(EventData);
            await ScheduleReference.OpenEditorAsync(EventData, CurrentAction.Add);
        }

    }

    public class TreeViewModel
    {
        public int Id { get; set; }

        public string Name { get; set; }
    }

    List<TreeViewModel> TreeViewData = new List<TreeViewModel>
    {
        new TreeViewModel { Id = 1, Name = "Peter"},
        new TreeViewModel { Id = 2, Name = "David"},
        new TreeViewModel { Id = 3, Name = "Steve"},
        new TreeViewModel { Id = 4, Name = "John" }
    };

    DateTime CurrentDate = new DateTime(2021, 5, 3);

    public class AppointmentDataModel
    {
        public int Id { get; set; }

        public string Subject { get; set; }

        public DateTime StartTime { get; set; }

        public DateTime EndTime { get; set; }

        public bool IsAllDay { get; set; }
    }

    List<AppointmentDataModel> ScheduleData = new List<AppointmentDataModel>
    {
        new AppointmentDataModel { Id = 1, Subject = "John", StartTime = new DateTime(2021, 5, 5, 10, 0, 0) , EndTime = new DateTime(2021, 5, 5, 11, 0, 0)},
        new AppointmentDataModel { Id = 2, Subject = "Steve", StartTime = new DateTime(2021, 5, 6, 11, 0, 0) , EndTime = new DateTime(2021, 5, 6, 12, 0, 0)}
    };

}

<style>
    .scheduler-title-container {
        width: 80%;
        padding-bottom: 15px;
        display: inline-block;
        text-align: center;
        font-weight: bold;
    }

    .treeview-title-container {
        width: 15%;
        display: inline-block;
        padding-left: 20px;
        text-align: left;
        font-weight: bold;
    }

    .scheduler-component {
        float: left;
        width: 80%;
    }

    .treeview-component {
        float: left;
        width: 20%;
    }

</style>
